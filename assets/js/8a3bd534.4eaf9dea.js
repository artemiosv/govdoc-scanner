"use strict";(self.webpackChunkdocs_site=self.webpackChunkdocs_site||[]).push([[221],{8453:(e,n,s)=>{s.d(n,{R:()=>c,x:()=>i});var r=s(6540);const o={},t=r.createContext(o);function c(e){const n=r.useContext(t);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:c(e.components),r.createElement(t.Provider,{value:n},e.children)}},8809:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>i,default:()=>p,frontMatter:()=>c,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"code-examples/overview","title":"Code Examples Overview","description":"This section provides simple examples for using the GovDoc Scanner orchestrator - the recommended way to use the project.","source":"@site/docs/code-examples/overview.md","sourceDirName":"code-examples","slug":"/code-examples/overview","permalink":"/govdoc-scanner/docs/code-examples/overview","draft":false,"unlisted":false,"editUrl":"https://github.com/flexivian/govdoc-scanner/edit/main/docs-site/docs/code-examples/overview.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"docsSidebar","previous":{"title":"Development Setup","permalink":"/govdoc-scanner/docs/installation/Development"},"next":{"title":"Crawler Examples","permalink":"/govdoc-scanner/docs/code-examples/crawler-examples"}}');var o=s(4848),t=s(8453);const c={sidebar_position:1},i="Code Examples Overview",a={},l=[{value:"Orchestrator Examples",id:"orchestrator-examples",level:2},{value:"Basic Usage",id:"basic-usage",level:3},{value:"Programmatic Usage",id:"programmatic-usage",level:3},{value:"Output Structure",id:"output-structure",level:3},{value:"Individual Applications",id:"individual-applications",level:2},{value:"Next Steps",id:"next-steps",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"code-examples-overview",children:"Code Examples Overview"})}),"\n",(0,o.jsx)(n.p,{children:"This section provides simple examples for using the GovDoc Scanner orchestrator - the recommended way to use the project."}),"\n",(0,o.jsx)(n.h2,{id:"orchestrator-examples",children:"Orchestrator Examples"}),"\n",(0,o.jsx)(n.p,{children:"The orchestrator provides the complete end-to-end workflow, combining crawling and document processing automatically."}),"\n",(0,o.jsx)(n.h3,{id:"basic-usage",children:"Basic Usage"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Single Company Processing:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"npx nx run orchestrator:start\n# Select: 1) Single ID\n# Enter GEMI ID: 123204604000\n# Wait for automatic crawling and processing\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Batch Processing from File:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:'# Create a file with GEMI IDs (one per line)\necho "123204604000" > companies.txt\necho "144340502000" >> companies.txt\n\n# Run orchestrator\nnpx nx run orchestrator:start\n# Select: 2) File\n# Enter file path: companies.txt\n'})}),"\n",(0,o.jsx)(n.h3,{id:"programmatic-usage",children:"Programmatic Usage"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Simple Integration:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-javascript",children:'import { spawn } from "child_process";\n\nasync function processCompanies(gemiIds) {\n  return new Promise((resolve, reject) => {\n    const orchestrator = spawn("npx", ["nx", "run", "orchestrator:start"]);\n\n    // Send input\n    orchestrator.stdin.write("2\\n"); // File option\n    orchestrator.stdin.write("./ids.txt\\n");\n    orchestrator.stdin.end();\n\n    orchestrator.on("close", (code) => {\n      code === 0 ? resolve() : reject(new Error(`Failed: ${code}`));\n    });\n  });\n}\n'})}),"\n",(0,o.jsx)(n.h3,{id:"output-structure",children:"Output Structure"}),"\n",(0,o.jsxs)(n.p,{children:["After processing, you'll find results in the ",(0,o.jsx)(n.code,{children:"output/"})," directory:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"output/\n\u251c\u2500\u2500 123204604000/\n\u2502   \u251c\u2500\u2500 123204604000_final_metadata.json\n\u2502   \u2514\u2500\u2500 document_downloads/\n\u2502       \u251c\u2500\u2500 2019-09-23_90189.pdf\n\u2502       \u2514\u2500\u2500 2020-11-03_2334237.pdf\n\u2514\u2500\u2500 govdoc-output.json  # Summary of all processed companies\n"})}),"\n",(0,o.jsx)(n.h2,{id:"individual-applications",children:"Individual Applications"}),"\n",(0,o.jsx)(n.p,{children:"For specific use cases, you can use individual applications:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:(0,o.jsx)(n.a,{href:"/govdoc-scanner/docs/code-examples/crawler-examples",children:"Crawler Examples"})})," - Web scraping and document downloading"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:(0,o.jsx)(n.a,{href:"/govdoc-scanner/docs/code-examples/doc-scanner-examples",children:"Doc-Scanner Examples"})})," - Document processing and metadata extraction"]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["Check the ",(0,o.jsx)(n.a,{href:"/govdoc-scanner/docs/installation/Getting%20Started",children:"Getting Started"})," guide for setup"]}),"\n",(0,o.jsxs)(n.li,{children:["Explore ",(0,o.jsx)(n.a,{href:"/govdoc-scanner/docs/installation/Development",children:"Development Setup"})," for advanced usage"]}),"\n",(0,o.jsxs)(n.li,{children:["Review the ",(0,o.jsx)(n.a,{href:"/govdoc-scanner/docs/gsoc/2025/overview",children:"GSoC 2025 Overview"})," for project roadmap"]}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}}}]);